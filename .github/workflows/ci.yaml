name: CI

on: push

jobs:
  project-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install Packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run DVC Pipeline
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: dvc repro

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
     
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  deploy-on-ec2:
    needs: project-pipeline
    runs-on: self-hosted

    steps:        
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Authenticate ECR
        run: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 891377050051.dkr.ecr.ap-south-1.amazonaws.com
      
      - name: Pull the image from ECR
        run: docker pull 891377050051.dkr.ecr.ap-south-1.amazonaws.com/emotion-detection:latest

      - name: Stop any running containers
        continue-on-error: true
        run: docker stop emotion-detection

      - name: Remove pre-existing container
        continue-on-error: true
        run: docker container rm emotion-detection
        
      - name: Run the Container
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
          IMAGE_TAG: latest
        run:  docker run --name emotion-detection -p 80:8000 -d -e DAGSHUB_USER_TOKEN=${{ secrets.DAGSHUB_TOKEN }} $REGISTRY/$REPOSITORY:$IMAGE_TAG